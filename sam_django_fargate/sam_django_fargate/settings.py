"""
Django settings for sam_django_fargate project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import environ

env = environ.Env(
    DEBUG                   = (bool, False),
    ALLOWED_HOSTS           = (str, '*'),
    DATABASE                = (str, 'sqlite3'),
    DATABASE_USER           = (str, None),
    DATABASE_NAME           = (str, None),
    DATABASE_PASSWORD       = (str, None),
    DATABASE_HOST           = (str, '127.0.0.1'),
    DATABASE_PORT           = (str, '5432'),
    AWS_ACCESS_KEY_ID       = (str, None),
    AWS_SECRET_ACCESS_KEY   = (str, None),
    AWS_S3_REGION_NAME      = (str, None),
    AWS_STORAGE_BUCKET_NAME = (str, None),
)

environ.Env.read_env(os.path.join(os.path.dirname(os.path.dirname(__file__)), '.env'))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-mgqh-yki#^882#_y$^0q!t=dg=dd0*kkhq#jg-c*i&ft)9iz9r'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = env('ALLOWED_HOSTS').split(",")

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sam_django_fargate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sam_django_fargate.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {}
}

if env('DATABASE') == 'sqlite3':
    DATABASES['default'] = {
        'ENGINE' : 'django.db.backends.sqlite3',
        'NAME'   : BASE_DIR / 'db.sqlite3',
    }
elif env('DATABASE') == 'postgresql':
    DATABASES['default'] = {
        "ENGINE"   : "django.db.backends.postgresql",
        "NAME"     : env('DATABASE_NAME'),
        "USER"     : env('DATABASE_USER'),
        "PASSWORD" : env('DATABASE_PASSWORD'),
        "HOST"     : env('DATABASE_HOST'),
        "PORT"     : env('DATABASE_PORT'),
    }

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es-mx'

TIME_ZONE = 'America/Mexico_City'

USE_I18N = True

USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# S3 Config
AWS_ACCESS_KEY_ID       = env('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY   = env('AWS_SECRET_ACCESS_KEY')
AWS_S3_REGION_NAME      = env('AWS_S3_REGION_NAME')
AWS_STORAGE_BUCKET_NAME = env('AWS_STORAGE_BUCKET_NAME')

AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL       = None
AWS_QUERYSTRING_AUTH  = False
AWS_S3_CUSTOM_DOMAIN  = f"{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com"

STATICFILES_LOCATION = "static"
STATIC_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/{STATICFILES_LOCATION}/"

MEDIAFILES_LOCATION = "media"
MEDIA_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/{MEDIAFILES_LOCATION}/"

STORAGES = {
    "default"     : {"BACKEND": "sam_django_fargate.s3_storage.MediaStorage"},
    "staticfiles" : {"BACKEND": "sam_django_fargate.s3_storage.StaticStorage"},
}

AWS_S3_OBJECT_PARAMETERS = {
    "CacheControl": "max-age=2592000",
}
